VIX=get.hist.quote(instrument = "^VIX",provider = "yahoo",quote = "Close")
VIXret=diff(log(VIX))
library(tseries)
library(forecast)
VIX=get.hist.quote(instrument = "^VIX",provider = "yahoo",quote = "Close")
VIXret=diff(log(VIX))
library(tseries)
library(forecast)
VIX=get.hist.quote(instrument = "^VIX",provider = "yahoo",quote = "Close")
VIX=get.hist.quote(instrument = "^VIX",provider = "yahoo",quote = "Close")
is.na(VIX)
which(is.na(VIX))
length(VIX)
tail(VIX)
VIX=get.hist.quote(instrument = "^VIX",provider = "yahoo",quote = "Close", end = "2021-10-14")
VIX=get.hist.quote(instrument = "^VIX",provider = "yahoo",quote = "Close", end = "2021-10-15")
plot(VIX)
which(is.na(VIX))
SP=get.hist.quote(instrument = "^GSPC",provider = "yahoo",quote = "Close",
end = "2021-10-15")
returns=diff(log(SP))
plot(returns)
library(rugarch)
#modelling returns using GARCH
garchspec = ugarchspec(mean.model = list(armaOrder = c(0,0)),
variance.model = list(model = "sGARCH"),
distribution.model = "norm")
garchfit = ugarchfit(data = returns, spec = garchspec)
vol.ret = sigma(garchfit)
plot(vol.ret)
#modelling returns using EGARCH
egarchspec = ugarchspec(mean.model = list(armaOrder = c(0,0)),
variance.model = list(model = "eGARCH"),
distribution.model = "norm")
egarchfit = ugarchfit(data = returns, spec = egarchspec)
e.vol.ret = sigma(egarchfit)
plot(e.vol.ret)
lines(vol.ret, col = "red")
#modelling CBOE VIX using returns
mod1=lm((VIX[-1]) ~ vol.ret)
plot(VIX[-1])
lines(fitted(mod1), col = "red")
MSE.g.ret = MSE(y_pred = fitted(mod1), y_true = VIX) ; MSE.g.ret # 14.04035
library(MLmetrics)
MSE.g.ret = MSE(y_pred = fitted(mod1), y_true = VIX) ; MSE.g.ret # 14.04035
mod2=lm((VIX[-1]) ~ e.vol.ret)
plot(VIX[-1])
mod2=lm((VIX[-1]) ~ e.vol.ret)
plot(VIX[-1])
lines(fitted(mod2), col = "red")
MSE.eg.ret = MSE(y_pred = fitted(mod2), y_true = VIX) ; MSE.eg.ret # 13.3761
#modelling VIX using GARCH
garchspec = ugarchspec(mean.model = list(armaOrder = c(0,0)),
variance.model = list(model = "sGARCH"),
distribution.model = "norm")
garchfit = ugarchfit(data = VIX, spec = garchspec)
vol.vix = sigma(garchfit)
plot(vol.vix)
#modelling VIX using EGARCH (does not work)
egarchspec = ugarchspec(mean.model = list(armaOrder = c(0,0)),
variance.model = list(model = "eGARCH"),
distribution.model = "norm")
egarchfit = ugarchfit(data = VIX, spec = egarchspec)
#modelling VIX using EGARCH (does not work)
egarchspec = ugarchspec(mean.model = list(armaOrder = c(0,0)),
variance.model = list(model = "eGARCH"),
distribution.model = "norm",
solver.control = list(tol = 1e-12))
#modelling VIX using EGARCH (does not work)
egarchspec = ugarchspec(mean.model = list(armaOrder = c(0,0)),
variance.model = list(model = "eGARCH"),
distribution.model = "norm")
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver = "hybrid")
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
plot(e.vol.vix)
lines(vol.vix, col = "red")
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver.control = list(tol = 1e-12))
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver.control = list(tol = 1e-10))
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver.control = list(tol = 1))
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver.control = list(tol = 1000))
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver = "solnp")
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver = "solnp", out.sample = 1000)
egarchfit = ugarchfit(data = VIX, spec = egarchspec, out.sample = 10000)
egarchfit = ugarchfit(data = VIX, spec = egarchspec, out.sample = 2000)
MSE.g.vix = MSE(y_pred = fitted(mod3), y_true = VIX) ;
MSE.g.ret = MSE(y_pred = fitted(mod1), y_true = VIX) ;
MSE.g.ret = MSE(y_pred = fitted(mod1), y_true = VIX) %>%
MSE.g.ret # 14.03579
MSE.g.ret = MSE(y_pred = fitted(mod1), y_true = VIX) %>%
MSE.g.ret # 14.03579
MSE.g.ret = MSE(y_pred = fitted(mod1), y_true = VIX) ;
MSE.g.ret # 14.03579
MSE.g.ret = MSE(y_pred = fitted(mod1), y_true = VIX)
;MSE.g.ret # 14.03579
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver = "hybrid",
out.sample = 1000)
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
lines(vol.vix, col = "red")
plot(VIX)
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver = "nlminb",
out.sample = 1000)
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver = "nlminb")
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
#modelling VIX using EGARCH (does not work)
egarchspec = ugarchspec(mean.model = list(armaOrder = c(0,0)),
variance.model = list(model = "eGARCH"),
distribution.model = "norm")
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver = "nlminb")
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver = "nlminb", out.sample = 1000)
e.vol.vix = sigma(egarchfit)
egarchfit = ugarchfit(data = VIX, spec = egarchspec, solver = "nlminb", out.sample = 100)
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "nlminb", solver.control = list(tol = 1e-12))
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "nlminb", solver.control = list(1e-12))
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "nlminb", solver.control = list(tol = 1^(-12)))
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "nlminb", solver.control = list(tol = 1e-12))
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "lbfgs", solver.control = list(tol = 1e-12))
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "gosolnp")
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "nloptr")
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "nloptr", solver.control = list(tol = 1e-12))
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "solnp", solver.control = list(tol = 1e-12))
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "nlminb", solver.control = list(tol = 1e-12))
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "lbfgs", solver.control = list(tol = 1e-12))
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "gosolnp", solver.control = list(tol = 1e-12))
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "gosolnp", solver.control = list(tol = 1e-20))
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "gosolnp", solver.control = list(tol = 1e-50))
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "gosolnp", solver.control = list(tol = 50))
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
lines(vol.vix, col = "red")
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "gosolnp", solver.control = list(tol = 20))
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "gosolnp", solver.control = list(tol = 10))
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "gosolnp", solver.control = list(tol = 1))
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
egarchfit = ugarchfit(data = VIX, spec = egarchspec,
solver = "gosolnp", solver.control = list(tol = 100))
e.vol.vix = sigma(egarchfit)
plot(e.vol.vix)
lines(vol.vix, col = "red")
library(fGarch)
library(fGarch)
fGarch::garchFit(formula = ~ garch(1,1), data = VIX)
fGarch::garchFit(formula = ~ egarch(1,1), data = VIX)
#modelling returns using GARCH
garchspec = ugarchspec(mean.model = list(armaOrder = c(0,0)),
variance.model = list(model = "sGARCH"),
distribution.model = "norm")
garchfit = ugarchfit(data = returns, spec = garchspec)
vol.ret = sigma(garchfit)
length(returns)
train = returns[1:6756]
length(train)
pred=ugarchroll(spec = garchspec, data = train, n.ahead = 1, n.start = 1000,
refit.every = 50, refit.window = "recursive")
pred
plot(pred)
pred@model
pred@model$coef
pred=ugarchroll(spec = garchspec, data = train, n.ahead = 1, n.start = 3000,
refit.every = 300, refit.window = "recursive")
pred@model$coef
plot(pred)
pred@forecast
tail(pred@forecast)
tail(pred)
tail(pred@forecast)
tail.matrix(pred@forecast)
max.print
getOption("max.print")
plot(pred@forecast)
plot(pred@forecast[,3])
plot(pred@forecast[3])
pred@model$rollind
pred@model$spec
fitted(pred)
fitted(pred@model)
fitted(pred@forecast)
garchroll=ugarchroll(spec = garchspec, data = train, n.ahead = 1, n.start = 3000,
refit.every = 300, refit.window = "recursive")
pred = as.data.frame(garchroll)
pred$Mu
plot(pred$Mu)
plot(pred)
plot(garchroll)
plot(pred$Sigma)
plot.ts(pred$Sigma)
train = returns[1:7656]
garchspec = ugarchspec(mean.model = list(armaOrder = c(0,0)),
variance.model = list(model = "sGARCH"),
distribution.model = "norm")
garchroll=ugarchroll(spec = garchspec, data = train, n.ahead = 1, n.start = 3000,
refit.every = 300, refit.window = "recursive")
pred = as.data.frame(garchroll)
plot.ts(pred$Sigma)
plot(garchroll)
ugarchforecast(fitORspec = garchspec, data = train, n.ahead = 100,
n.roll = 100)
ugarchforecast(fitORspec = garchspec, data = train, n.ahead = 100)
ugarchforecast(fitORspec = garchroll, data = train, n.ahead = 100)
ugarchforecast(fitORspec = pred, data = train, n.ahead = 100)
garchfit = ugarchfit(data = returns, spec = garchspec)
ugarchforecast(fitORspec = garchfit, data = train, n.ahead = 100)
fore = ugarchforecast(fitORspec = garchfit, data = train, n.ahead = 100)
fore
plot(fore@forecast)
fore@forecast
foremod = ugarchforecast(fitORspec = garchfit, data = train, n.ahead = 100)
fore = as.data.frame(foremod)
plot(foremod)
foremod = ugarchforecast(fitORspec = garchfit, data = train, n.ahead = 100,
out.sample = 1000, n.roll = 10)
garchfitfore = ugarchfit(data = returns, spec = garchspec, out.sample = 1000)
foremod = ugarchforecast(fitORspec = garchfitfore, data = train, n.ahead = 100,
out.sample = 1000, n.roll = 10)
plot(foremod)
garchfitfore = ugarchfit(data = returns, spec = garchspec, out.sample = 1000)
foremod = ugarchforecast(fitORspec = garchfitfore, data = returns, n.ahead = 100,
out.sample = 1000, n.roll = 10)
plot(foremod)
plot(foremod, 3)
plot(foremod)
