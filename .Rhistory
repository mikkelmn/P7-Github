log(0)
log(1)
# log og diff
lde=log(DE+150)
dlde = ts(diff(lde))
plot(dlde)
# log og diff
lde=log(DE+150); plot(lde)
# log og diff
lde=log(DE+150); plot.ts(lde)
plot(dlde)
acf(dlde, lag.max = 100)
pacf(dlde, lag.max = 100)
acf(dlde, lag.max = 50)
pacf(dlde, lag.max = 50)
acf(dlde, lag.max = 100)
pacf(dlde, lag.max = 100)
aa_de = auto.arima(dlde, seasonal = TRUE)
summary(aa_de) #AIC 205177
# ACF og PACF
par(mfrow = c(2,1))
acf(dlde, lag.max = 100)
pacf(dlde, lag.max = 100)
aa_de = auto.arima(diff(dlde), seasonal = TRUE)
summary(aa_de) #AIC 205177
acf(diff(dlde), lag.max = 100)
par(mfrow = c(1,1))
acf(diff(dlde), lag.max = 100)
pacf(diff(dlde), lag.max = 100)
aa_de = auto.arima(dlde, seasonal = TRUE)
summary(aa_de) #AIC 205177
acf(dlde, lag.max = 100)
pacf(dlde, lag.max = 100)
sarima(dlde, p=3, d=0, q=2)
# sæson diff
ddlde=diff(dlde,24)
acf(ddlde, lag.max = 100)
pacf(ddlde, lag.max = 100)
aa_de = auto.arima(ddlde, seasonal = TRUE)
summary(aa_de)
sarima(ddlde, p=3, d=0, q=2)
sarima(ddlde, p=3, d=0, q=2, Q=1, S=24)
# daily average spot prices
dailyDE = ts(colSums(matrix(DE,nrow = 24)))/24 + 100
plot(dailyDE)
lde=log(dailyDE) ;plot(lde)
acf(lde, lag.max = 50)
pacf(lde, lag.max = 50)
# diff
dlde = ts(diff(lde))
plot(dlde)
acf(dlde, lag.max = 50)
pacf(dlde, lag.max = 50)
aa_de = auto.arima(dlde)
summary(aa_de)
sarima(dlde, p=0, d=0, q=3)
ddlde=diff(dlde,7) ;plot(ddlde)
acf(ddlde, lag.max = 50)
pacf(ddlde, lag.max = 50)
aa_de = auto.arima(ddlde)
summary(aa_de)
ddlde=diff(dlde,7) ;plot(ddlde)
acf(ddlde, lag.max = 50)
pacf(ddlde, lag.max = 50)
aa_de = auto.arima(ddlde)
summary(aa_de)
# daily average spot prices
dailyDE = ts(colSums(matrix(DE,nrow = 24)))/24 + 100
lde=log(dailyDE) ;plot(lde)
# diff
dlde = ts(diff(lde))
plot(dlde)
aa_de = auto.arima(dlde)
summary(aa_de)
ddlde=diff(dlde,7) ;plot(ddlde)
aa_de = auto.arima(ddlde)
summary(aa_de)
acf(ddlde, lag.max = 50)
pacf(ddlde, lag.max = 50)
sarima(ddlde, p=2, d=0, q=0, Q=1, S=7)
sarima(dlde, p=2, d=0, q=0, Q=1, S=7)
sarima(ddlde, p=0, d=0, q=3, Q=1, S=7)
sarima.for(ddlde, p=2, d=0, q=0, Q=1, S=7)
sarima.for(ddlde, n.ahead = 50, p=2, d=0, q=0, Q=1, S=7)
sarima.for(ddlde, n.ahead = 20, p=2, d=0, q=0, Q=1, S=7)
sarima.for(dlde, n.ahead = 20, p=2, d=0, q=0, Q=1, S=7)
sarima.for(ddlde, n.ahead = 20, p=2, d=0, q=0, Q=1, S=7)
sarima.for(lde, n.ahead = 20, p=2, d=1, q=0, D=1, Q=1, S=7)
sarima.for(lde, n.ahead = 30, p=2, d=1, q=0, D=1, Q=1, S=7)
sarima.for(dailyDE, n.ahead = 30, p=2, d=1, q=0, D=1, Q=1, S=7)
sarima.for(lde, n.ahead = 30, p=2, d=1, q=0, D=1, Q=1, S=7)
# Outlier detection
hist(dailyDE)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
clean.boudt(dailyDE, alpha = 0.01, trim = 0.001)
clean.boudt(dailyDE, alpha = 0.01, trim = 0.001)
boxplot(dailyDE)
boxplot(dailyDE)$out
ggbetweenstats(warpbreaks,
wool, breaks, outlier.tagging = TRUE)
detach("package:PerformanceAnalytics", unload = TRUE)
remove.packages("PerformanceAnalytics", lib="~/R/win-library/3.6")
install.packages("ggstatsplot")
boxplot(dailyDE)
outliers = boxplot(dailyDE)$outs
dailyDE=dailyDE[-which(dailyDE %in% outliers),]
dailyDE=dailyDE[-which(outliers %in% dailyDE),]
# Outlier detection
hist(dailyDE)
boxplot(dailyDE)
outliers = boxplot(dailyDE)$outs
outliers
boxplot(dailyDE)$outs
boxplot(dailyDE)$out
outliers = boxplot(dailyDE)$out
dailyDE=dailyDE[-which(dailyDE %in% outliers),]
outliers = boxplot(dailyDE)$out
dailyDE=dailyDE[-which(dailyDE %in% outliers)]
# Outlier detection
hist(dailyDE)
boxplot(dailyDE)
# daily average spot prices
dailyDE = ts(colSums(matrix(DE,nrow = 24)))/24 + 100
spot_prices <- read_excel("spot_prices.xlsx")
library(readxl)
library(forecast)
library(astsa)
spot_prices <- read_excel("spot_prices.xlsx")
attach(spot_prices)
# daily average spot prices
dailyDE = ts(colSums(matrix(DE,nrow = 24)))/24 + 100
plot(dailyDE)
lde=log(dailyDE) ;plot(lde)
# Outlier detection
hist(dailyDE)
boxplot(dailyDE)
outliers = boxplot(dailyDE)$out
dailyDE_or=dailyDE[-which(dailyDE %in% outliers)]
hist(dailyDE_or)
boxplot(dailyDE_or)
hist(dailyDE_or)
plot(dailyDE_or)
plot.ts(dailyDE_or)
# daily average spot prices
dailyDE = ts(colSums(matrix(DE,nrow = 24)))/24
plot(dailyDE)
# Outlier detection
hist(dailyDE)
boxplot(dailyDE)
outliers = boxplot(dailyDE)$out
dailyDE_or=dailyDE[-which(dailyDE %in% outliers)]
hist(dailyDE_or)
plot.ts(dailyDE_or)
# Modelling
lde=log(dailyDE_or) ;plot(lde)
# Modelling
lde=ts(log(dailyDE_or)) ;plot(lde)
# ACF og PACF
acf(lde, lag.max = 50)
pacf(lde, lag.max = 50)
# diff
dlde = ts(diff(lde))
plot(dlde)
acf(dlde, lag.max = 50)
pacf(dlde, lag.max = 50)
aa_de = auto.arima(dlde)
summary(aa_de)
sarima(dlde, p=0, d=0, q=3)
ddlde=diff(dlde,7) ;plot(ddlde)
acf(ddlde, lag.max = 50)
pacf(ddlde, lag.max = 50)
aa_de = auto.arima(ddlde)
summary(aa_de)
sarima(ddlde, p=0, d=0, q=1)
sarima(ddlde, p=0, d=0, q=3, Q=1, S=7)
# forecast
sarima.for(lde, n.ahead = 30, p=0, d=1, q=3, D=1, Q=1, S=7)
# forecast
sarima.for(lde, n.ahead = 30, p=0, d=1, q=1, D=1, Q=1, S=7)
# forecast
sarima.for(lde, n.ahead = 30, p=0, d=1, q=3, D=1, Q=1, S=7)
plot.ts(FR)
# Outlier detection
hist(FR)
boxplot(FR)
FRoutliers = boxplot(FR)$out
FR_or=FR[-which(FR %in% FRoutliers)]
hist(FR_or)
plot.ts(FR_or)
# log og diff
lfr=log(FR_or); plot.ts(lfr)
# log og diff
min(FR_or)
lfr=log(FR_or+5); plot.ts(lfr)
dlfr = ts(diff(lfr))
plot(dlfr)
acf(dlde, lag.max = 100)
acf(dlfr, lag.max = 100)
pacf(dlfr, lag.max = 100)
aa_fr = auto.arima(dlfr)
summary(aa_fr)
sarima(dlfr, p=2, d=0, q=3)
# sæson diff
ddlfr=diff(dlfr,24)
acf(ddlfr, lag.max = 100)
pacf(ddlfr, lag.max = 100)
aa_de = auto.arima(ddlfr)
summary(aa_fr)
aa_fr = auto.arima(ddlfr)
summary(aa_fr)
sarima(ddlde, p=0, d=0, q=5)
sarima(ddlde, p=0, d=0, q=5, Q=1, S=24) #tager lang tid at køre
# daily average spot prices
dailyFR = ts(colSums(matrix(FR,nrow = 24)))/24
plot(dailyFR)
# Outlier detection
hist(dailyFR)
boxplot(dailyFR)
outliersFR = boxplot(dailyFR)$out
dailyFR_or=dailyFR[-which(dailyFR %in% outliersFR)]
hist(dailyFR_or)
plot.ts(dailyFR_or)
# Modelling
lfr=ts(log(dailyFR_or)) ;plot(lfr)
# ACF og PACF
acf(lfr, lag.max = 50)
pacf(lfr, lag.max = 50)
# diff
dlfr = ts(diff(lfr))
plot(dlfr)
acf(dlfr, lag.max = 50)
pacf(dlfr, lag.max = 50)
aa_fr = auto.arima(dlfr)
summary(aa_fr)
ddlfr=diff(dlfr,7) ;plot(ddlfr)
boxplot(dailyFR_or)
acf(ddlfr, lag.max = 50)
pacf(ddlfr, lag.max = 50)
aa_fr = auto.arima(ddlfr)
summary(aa_fr)
sarima(ddlfr, p=0, d=0, q=2)
sarima(ddlfr, p=0, d=0, q=2, Q=1, S=7)
# forecast
sarima.for(lfr, n.ahead = 30, p=0, d=1, q=2, D=1, Q=1, S=7)
ccf(lfr,lde)
prewhiten(lfr,lde)
library(TSA)
prewhiten(lfr,lde)
frmod=sarima(ddlfr, p=0, d=0, q=2, Q=1, S=7)
prewhiten(x=lfr,y=lde,x.model=frmod)
frmod=sarima(ddlfr, p=0, d=0, q=2)
prewhiten(x=lfr,y=lde,x.model=frmod)
prewhiten(x=lfr,y=lde)
arimax(x = lfr,order = c(0,1,2),seasonal = list(order=c(0,1,1),period = 7),xtransf = lde)
arimax(x = lfr,order = c(0,1,2),seasonal = list(order=c(0,1,1),period = 7),xreg = lde)
library(readxl)
library(forecast)
library(astsa)
spot_prices <- read_excel("spot_prices.xlsx")
attach(spot_prices)
DE
plot.ts(DE)
# de første 25 dage
plot.ts(DE[1:600])
acf(DE, lag.max = 50)
pacf(DE, lag.max = 50)
# log og diff
lde=log(DE+150); plot.ts(lde)
dlde = ts(diff(lde))
plot(dlde)
acf(dlde, lag.max = 100)
pacf(dlde, lag.max = 100)
aa_de = auto.arima(dlde, seasonal = TRUE)
summary(aa_de)
aa_de1 = auto.arima(dlde, seasonal = TRUE)
summary(aa_de1)
sarima(dlde, p=3, d=0, q=2)
# sæson diff
ddlde=diff(dlde,24)
acf(ddlde, lag.max = 100)
pacf(ddlde, lag.max = 100)
aa_de = auto.arima(ddlde, seasonal = TRUE)
aa_de2 = auto.arima(ddlde, seasonal = TRUE)
summary(aa_de2)
sarima(ddlde, p=3, d=0, q=2)
sarima(ddlde, p=3, d=0, q=2, Q=1, S=24) #tager lang tid at køre
# daily average spot prices
dailyDE = ts(colSums(matrix(DE,nrow = 24)))/24
plot(dailyDE)
# Outlier detection
hist(dailyDE)
boxplot(dailyDE)
outliers = boxplot(dailyDE)$out
dailyDE_or=dailyDE[-which(dailyDE %in% outliers)]
hist(dailyDE_or)
plot.ts(dailyDE_or)
# Modelling
lde=ts(log(dailyDE_or)) ;plot(lde)
# ACF og PACF
acf(lde, lag.max = 50)
pacf(lde, lag.max = 50)
# diff
dlde = ts(diff(lde))
plot(dlde)
acf(dlde, lag.max = 50)
pacf(dlde, lag.max = 50)
aa_de3 = auto.arima(dlde)
summary(aa_de3)
sarima(dlde, p=0, d=0, q=3)
ddlde=diff(dlde,7) ;plot(ddlde)
acf(ddlde, lag.max = 50)
pacf(ddlde, lag.max = 50)
aa_de = auto.arima(ddlde)
aa_de4 = auto.arima(ddlde)
summary(aa_de4)
sarima(ddlde, p=0, d=0, q=1)
sarima(ddlde, p=0, d=0, q=3, Q=1, S=7)
# forecast
sarima.for(lde, n.ahead = 30, p=0, d=1, q=3, D=1, Q=1, S=7)
plot.ts(DE)
plot(x=Start,y=DE)
acf(DE, lag.max = 50)
pacf(DE, lag.max = 50)
# log og diff
lde=log(DE+150); plot.ts(lde)
dlde = ts(diff(lde))
plot(dlde)
acf(dlde, lag.max = 100)
pacf(dlde, lag.max = 100)
aa_de1 = auto.arima(dlde, seasonal = TRUE)
summary(aa_de1)
sarima(dlde, p=3, d=0, q=2)
residuals(aa_de1)
hist(residuals(aa_de1))
hist(residuals(aa_de1),breaks = 50)
hist(residuals(aa_de1),breaks = 100)
# sæson diff
ddlde=diff(dlde,24)
acf(ddlde, lag.max = 100)
pacf(ddlde, lag.max = 100)
summary(aa_de2)
sarima(ddlde, p=3, d=0, q=2)
plot(dailyDE)
# Outlier detection
hist(dailyDE)
boxplot(dailyDE)
outliers = boxplot(dailyDE)$out
dailyDE_or=dailyDE[-which(dailyDE %in% outliers)]
hist(dailyDE_or)
plot.ts(dailyDE_or)
# Modelling
lde=ts(log(dailyDE_or)) ;plot(lde)
# ACF og PACF
acf(lde, lag.max = 50)
pacf(lde, lag.max = 50)
# diff
dlde = ts(diff(lde))
plot(dlde)
acf(dlde, lag.max = 50)
pacf(dlde, lag.max = 50)
summary(aa_de3)
ddlde=diff(dlde,7) ;plot(ddlde)
acf(ddlde, lag.max = 50)
pacf(ddlde, lag.max = 50)
summary(aa_de4)
sarima(ddlde, p=0, d=0, q=3, Q=1, S=7)
# forecast
sarima.for(lde, n.ahead = 30, p=0, d=1, q=3, D=1, Q=1, S=7)
plot.ts(FR)
# Outlier detection
hist(FR)
boxplot(FR)
FRoutliers = boxplot(FR)$out
FR_or=FR[-which(FR %in% FRoutliers)]
hist(FR_or)
plot.ts(FR_or)
lfr=log(FR_or+5); plot.ts(lfr)
dlfr = ts(diff(lfr))
plot(dlfr)
acf(dlfr, lag.max = 100)
pacf(dlfr, lag.max = 100)
prewhiten(x=lfr,y=lde)
ccf(DE,FR)
# cross-correlation effects
plot(DE)
# cross-correlation effects
plot.ts(DE)
library(tseries)
get.hist.quote(instrument = "^VIX",provider = "yahoo")
VIX=get.hist.quote(instrument = "^VIX",provider = "yahoo")
plot(VIX)
VIX=get.hist.quote(instrument = "^VIX",provider = "yahoo",quote = "Close")
plot(VIX)
SP=get.hist.quote(instrument = "^GSPC",provider = "yahoo",quote = "Close")
plot(SP)
library(fGarch)
install.packages(fGarch)
install.packages("fGarch")
library(fGarch)
returns=diff(log(SP))
plot(returns)
plot(VIX)
plot(abs(returns))
plot(VIX)
plot(diff(log(VIX)))
plot(returns)
plot(diff(VIX))
garch(x = diff(VIX), order = c(1,1))
is.na(VIX)
which(is.na(VIX))
which(is.na(diff(VIX)))
apply(is.na(VIX), 2, which)
sum(is.na(VIX))
sum(is.na(diff(VIX)))
library(zoo)
garch(x = diff(VIX), order = c(1,1))
sum(is.na(diff(VIX)))
VIX=na.omit(VIX)
garch(x = diff(VIX), order = c(1,1))
na.omit(VIX)
vIX=na.omit(VIX)
garch(x = VIX, order = c(1,1))
garch(x = returns, order = c(1,1))
data.frame(VIX)
VIX=data.frame(VIX)
View(VIX)
sum(is.na(diff(VIX)))
which(is.na(diff(VIX)))
garch(x = VIX, order = c(1,1))
mod=garch(x = VIX, order = c(1,1))
summary(mod)
mod=garch(x = VIX, order = c(1,0))
summary(mod)
mod=garch(x = VIX, order = c(0,1))
summary(mod)
plot(VIX)
plot.ts(VIX)
lines(fitted(mod))
lines(fitted(mod), col="red")
plot(VIX)
lines(fitted(mod), col="red")
plot(fitted(mod), col="red")
plot.ts(fitted(mod), col="red")
plot(mod$fitted.values)
plot.ts(mod$fitted.values)
plot(mod$residuals)
plot.ts(mod$residuals)
mod=garch(x = VIX, order = c(1,1))
summary(mod)
plot.ts(fitted(mod), col="red")
plot.ts(mod$residuals)
plot(mod)
plot.ts(mod$series)
plot.ts(mod$series)
plot.ts(mod$residuals)
plot.ts(mod$residuals)
plot.ts(mod$residuals)
plot.ts(mod$series)
plot.ts(mod$series)
plot.ts(mod)
plot(mod)
plot(mod$series)
mod=garch(x = returns, order = c(1,1))
returns=data.frame(returns)
SP=get.hist.quote(instrument = "^GSPC",provider = "yahoo",quote = "Close")
returns=diff(log(SP))
returns=ts(returns)
mod=garch(x = returns, order = c(1,1))
summary(mod)
plot(mod)
plot(fitted(mod))
plot(mod)
mod$vcov
mod$call
mod=garchFit(x = returns, order = c(1,1))
summary(mod)
plot(mod)
mod1=garchFit(x = VIX, order = c(1,1))
summary(mod)
summary(mod1)
returns=diff(log(SP))
SP=get.hist.quote(instrument = "^GSPC",provider = "yahoo",quote = "Close")
VIX=get.hist.quote(instrument = "^VIX",provider = "yahoo",quote = "Close")
VIX(diff(VIX))
VIX=get.hist.quote(instrument = "^VIX",provider = "yahoo",quote = "Close")
VIX(diff(VIX))
plot(diff(VIX))
VIX=diff(VIX)
mod1=garchFit(x = VIX, order = c(1,1))
summary(mod1)
plot(mod1)
SP=get.hist.quote(instrument = "^GSPC",provider = "yahoo",quote = "Close")
returns=diff(log(SP))
plot(returns)
mod=garchFit(x = returns, order = c(1,1))
summary(mod)
plot(mod)
plot(returns)
plot(mod)
fitted(mod)
plot(fitted(mod))
plot(mod@h.t)
length(mod@h.t)
length(returns)
plot(mod1@h.t)
mod=garchFit(x = returns, order = c(1,1))
summary(mod)
plot(mod)
plot(mod@h.t)
plot(mod1@h.t)
setwd("~/AAU/7. Semester/P7/P7-Github")
